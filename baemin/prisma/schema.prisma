generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model banner_carousel {
  banner_id     Int       @id @default(autoincrement())
  image_url     String    @db.VarChar(255)
  title         String?   @db.VarChar(100)
  description   String?
  link_url      String?   @db.VarChar(255)
  display_order Int?
  start_date    DateTime? @db.Date
  end_date      DateTime? @db.Date
}

model cart {
  id         Int          @id @default(autoincrement())
  user_id    Int          @unique
  users      users        @relation(fields: [user_id], references: [user_id], onDelete: Cascade, onUpdate: NoAction)
  cart_items cart_items[]

  @@index([user_id], map: "idx_cart_user_id")
}

model cart_items {
  id           Int        @id @default(autoincrement())
  cart_id      Int
  menu_item_id Int
  quantity     Int
  cart         cart       @relation(fields: [cart_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  menu_items   menu_items @relation(fields: [menu_item_id], references: [item_id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([cart_id, menu_item_id])
  @@index([cart_id], map: "idx_cart_items_cart_id")
  @@index([menu_item_id], map: "idx_cart_items_menu_item_id")
}

model delivery_status {
  status_id Int       @id @default(autoincrement())
  order_id  Int?
  status    String    @db.VarChar(50)
  timestamp DateTime? @default(now()) @db.Timestamp(6)
  orders    orders?   @relation(fields: [order_id], references: [order_id], onDelete: NoAction, onUpdate: NoAction)
}

model food_categories {
  category_id   Int          @id @default(autoincrement())
  name          String       @db.VarChar(50)
  display_order Int?
  icon_url      String?      @db.VarChar(255)
  menu_items    menu_items[]
}

model menu_items {
  item_id            Int                 @id @default(autoincrement())
  restaurant_id      Int?
  submenu_id         Int?
  category_id        Int?
  name               String              @db.VarChar(100)
  description        String?
  price              Decimal             @db.Decimal(10, 2)
  image_url          String?             @db.VarChar(255)
  cart_items         cart_items[]
  food_categories    food_categories?    @relation(fields: [category_id], references: [category_id], onDelete: NoAction, onUpdate: NoAction)
  restaurants        restaurants?        @relation(fields: [restaurant_id], references: [restaurant_id], onDelete: NoAction, onUpdate: NoAction)
  restaurant_submenu restaurant_submenu? @relation(fields: [submenu_id], references: [submenu_id], onDelete: NoAction, onUpdate: NoAction)
  order_items        order_items[]
}

model order_items {
  order_item_id Int         @id @default(autoincrement())
  order_id      Int?
  item_id       Int?
  quantity      Int
  price         Decimal     @db.Decimal(10, 2)
  menu_items    menu_items? @relation(fields: [item_id], references: [item_id], onDelete: NoAction, onUpdate: NoAction)
  orders        orders?     @relation(fields: [order_id], references: [order_id], onDelete: NoAction, onUpdate: NoAction)
}

model order_payments {
  payment_id        Int              @id @default(autoincrement())
  order_id          Int?
  payment_method_id Int?
  amount            Decimal          @db.Decimal(10, 2)
  status            String           @db.VarChar(20)
  transaction_id    String?          @db.VarChar(100)
  created_at        DateTime?        @default(now()) @db.Timestamp(6)
  orders            orders?          @relation(fields: [order_id], references: [order_id], onDelete: NoAction, onUpdate: NoAction)
  payment_methods   payment_methods? @relation(fields: [payment_method_id], references: [payment_method_id], onDelete: NoAction, onUpdate: NoAction)
}

model orders {
  order_id              Int               @id @default(autoincrement())
  user_id               Int?
  restaurant_id         Int?
  total_amount          Decimal           @db.Decimal(10, 2)
  status                String            @db.VarChar(20)
  created_at            DateTime?         @default(now()) @db.Timestamp(6)
  delivery_address      String?
  delivery_instructions String?
  delivery_status       delivery_status[]
  order_items           order_items[]
  order_payments        order_payments[]
  restaurants           restaurants?      @relation(fields: [restaurant_id], references: [restaurant_id], onDelete: NoAction, onUpdate: NoAction)
  users                 users?            @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction)
}

model payment_methods {
  payment_method_id Int              @id @default(autoincrement())
  name              String           @db.VarChar(50)
  order_payments    order_payments[]
}

model restaurant_submenu {
  submenu_id    Int          @id @default(autoincrement())
  restaurant_id Int?
  name          String       @db.VarChar(50)
  display_order Int?
  menu_items    menu_items[]
  restaurants   restaurants? @relation(fields: [restaurant_id], references: [restaurant_id], onDelete: NoAction, onUpdate: NoAction)
}

model restaurants {
  restaurant_id      Int                  @id @default(autoincrement())
  name               String               @db.VarChar(100)
  address            String
  phone_number       String?              @db.VarChar(20)
  rating             Decimal?             @db.Decimal(3, 2)
  opening_hours      String?              @db.VarChar(100)
  cuisine_type       String?              @db.VarChar(50)
  menu_items         menu_items[]
  orders             orders[]
  restaurant_submenu restaurant_submenu[]
  reviews            reviews[]
}

model reviews {
  review_id     Int          @id @default(autoincrement())
  user_id       Int?
  restaurant_id Int?
  rating        Int
  comment       String?
  created_at    DateTime?    @default(now()) @db.Timestamp(6)
  restaurants   restaurants? @relation(fields: [restaurant_id], references: [restaurant_id], onDelete: NoAction, onUpdate: NoAction)
  users         users?       @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction)
}

model users {
  user_id      Int       @id @default(autoincrement())
  email        String    @unique @db.VarChar(100)
  password     String    @db.VarChar(255)
  phone_number String?   @db.VarChar(20)
  address      String?
  created_at   DateTime? @default(now()) @db.Timestamp(6)
  first_name   String?   @db.VarChar(50)
  last_name    String?   @db.VarChar(50)
  updated_at   DateTime? @default(now()) @db.Timestamp(6)
  cart         cart?
  orders       orders[]
  reviews      reviews[]
}
